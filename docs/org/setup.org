# -*- mode: org; mode auto-fill -*-
#+TITLE:   Initial setup
#+startup: showeverything

*** Gem dependencies

#+BEGIN_SRC ruby :tangle Gemfile
source "https://rubygems.org"

gem 'jekyll', '1.3.0'
gem 'pygments.rb'
gem 'org-ruby'
#+END_SRC

#+name: bundle-install
#+BEGIN_SRC sh
bundle install 
#+END_SRC

*** Org mode plugin

In order to avoid the YAML markup above and only use Org mode,
we install the following plugin below.

Note: Based from source at <https://github.com/eggcaker/jekyll-org>

#+BEGIN_SRC ruby :tangle src/_plugins/convert.rb :mkdirp true
require 'org-ruby'

module Jekyll
  class OrgConverter < Converter
    safe true

    priority :low

    def matches(ext)
      ext =~ /org/i
    end

    def output_ext(ext)
      ".html"
    end

    def convert(content)
      content
    end
  end

  module Filters
    def restify(input)
      site = @context.registers[:site]
      converter = site.getConverterImpl(Jekyll::OrgConverter)
      converter.convert(input)
    end
  end

  # This overrides having to use YAML in the posts
  # and instead use in buffer settings from Org mode
  class Post
    def read_yaml(base, name, opts = {})
      content = File.read_with_options(File.join(base, name),
                                       merged_file_read_opts(opts))
      self.data ||= {}

      org_text = Orgmode::Parser.new(content)
      org_text.in_buffer_settings.each_pair do |key, value|
        # Remove #+TITLE from the buffer settings to avoid double exporting
        org_text.in_buffer_settings.delete(key) if key =~ /title/i
        buffer_setting = key.downcase
        self.data[buffer_setting] = value
      end

      # Disable Liquid tags from the output
      self.content = <<ORG
{% raw %}
#{org_text.to_html}
{% endraw %}
ORG
      self.extracted_excerpt = self.extract_excerpt
    rescue => e
      puts "Error converting file #{File.join(base, name)}: #{e.message} #{e.backtrace}"
    end
  end

  class Page
    include Convertible

    def read_yaml(base, name, opts = {})
      content = File.read_with_options(File.join(base, name),
                                       merged_file_read_opts(opts))
      self.data ||= {}

      org_text = Orgmode::Parser.new(content)
      org_text.in_buffer_settings.each_pair do |key, value|
        # Remove #+TITLE from the buffer settings to avoid double exporting
        org_text.in_buffer_settings.delete(key) if key =~ /title/i
        buffer_setting = key.downcase
        self.data[buffer_setting] = value
      end

      # Disable Liquid tags from the output
      self.content = <<ORG
{% raw %}
#{org_text.to_html}
{% endraw %}
ORG
    rescue => e
      puts "Error converting file #{File.join(base, name)}: #{e.message} #{e.backtrace}"
    end
  end
end
#+END_SRC

*** Config

This can be in YAML all right.

#+BEGIN_SRC yaml :tangle src/_config.yml
# Dependencies
highlighter:      pygments

# Permalinks
permalink:        pretty
relative_permalinks: true

# Setup
title:            Star API documentation
tagline:          'All These Stars Are Yours'
description:      'API to access the Digital Universe Data set'
baseurl:          /star-api/

author:
  name:           'Nancy, Jose, Zak, Waldemar, Nichol, and Suren'

paginate:         1

github:
  repo:           https://github.com/HacktheUniverse/star-api
#+END_SRC
